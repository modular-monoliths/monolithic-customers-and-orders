buildscript {
    repositories {
        jcenter()
        mavenCentral()
        eventuateMavenRepoUrl.split(',').each { repoUrl -> maven { url repoUrl } }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "com.avast.gradle:gradle-docker-compose-plugin:0.12.0"
        classpath "io.eventuate.plugins.gradle:eventuate-plugins-gradle-publish:$eventuatePluginsGradleVersion"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
    }
}

apply plugin: 'docker-compose'
apply plugin: "io.eventuate.plugins.gradle.publish.EventuatePublish"

subprojects {

    apply plugin: "java"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://dl.bintray.com/eventuateio-oss/eventuate-maven-release"
        }
        eventuateMavenRepoUrl.split(',').each { repoUrl -> maven { url repoUrl } }
    }

}

allprojects {
    group = "net.chrisrichardson.examples.monolithic.customersandorders"
}

dockerCompose {
    environment.put "EVENTUATE_COMMON_VERSION", eventuateCommonImageVersion
    environment.put "EVENTUATE_JAVA_BASE_IMAGE_VERSION", eventuateExamplesBaseImageVersion
    removeOrphans = true

    mysql {
        projectName = null
        removeContainers = project.ext.removeContainers
        startedServices = ["mysql"]
    }

    application {
        projectName = null
        removeContainers = project.ext.removeContainers
    }

}
